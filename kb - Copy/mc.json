{
    "table": "mc",
    "display_name": "Machine Connections",
    "alias": "mc",
    "description": "Machine and Test mapping",
    "fields": {
        "lastupdate": "last setup update (int)",
        "mcchannel": "Channel of comunication in Analyzer (nvarchar)",
        "mcdefault": "Is it the default communication channel to the analyzer ? (tinyint)",
        "mcdsporder": "Order in moving to workbench screen (F6) (smallint)",
        "mcemerg": "Is it the communication channel to the analyzer when the test marked as stat ? (tinyint)",
        "mchigh": "Not Active (real)",
        "mchourstoreset": "No Documentation for this Field (smallint)",
        "mcinitcanapprove": "Does reset status prevent approve (tinyint)",
        "mclow": "Not Active (real)",
        "mcmaching": "Machine code (smallint)",
        "mcmaterial": "Not Active (int)",
        "mcname": "Alternative name of the channel in the analyzer (nvarchar)",
        "mcnextqcresetdate": "next date to reset qc status (int)",
        "mcnextqcresettime": "next time to reset qc status (smallint)",
        "mcpriority": "No Documentation for this Field (smallint)",
        "mcqcconfirm": "Automatic approve by Qc (tinyint)",
        "mcqcformula": "No Documentation for this Field (int)",
        "mcqcresetafterpass": "Whether to reset the analyte Qc status immediately after pass (tinyint)",
        "mcqcstatus": "Qc status (tinyint)",
        "mcqcstatusdate": "The last QCstatus change date (int)",
        "mcqcstatusgroup": "No Documentation for this Field (smallint)",
        "mcqcstatusrun": "No Documentation for this Field (int)",
        "mcqcstatustime": "The last QCstatus change time (smallint)",
        "mcqpuse": "Material quantity (real)",
        "mcrequestlocalname": "No Documentation for this Field (nvarchar)",
        "mcreturn": "Number of runs (int)",
        "mcsentinfo": "Analyte additional info to be sent by the drivers (nvarchar)",
        "mcsite": "No Documentation for this Field (int)",
        "mctest": "Test code (int)"
    },
    "joins": {
        "c": "mc.mctest = c.ccode"
    },
    "examples": [],
    "Indexes": {
        "INDEX1_MC": "clustered located on PRIMARY (mcmaching, mctest)",
        "INDEX0_UNQ_MC": "nonclustered, unique located on PRIMARY (mctest, mcmaching, mcsite)"
    }
}